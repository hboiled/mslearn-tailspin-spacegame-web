# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- feature/*

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'
  serviceConnection : 'MS Learn Demo'

stages:
- stage: 'Build'
  displayName: 'Build Web App'
  jobs:
  - job: 'Build'
    displayName: 'Build artifacts'
    pool:
      vmImage: 'ubuntu-18.04' # explicit version required for project
      demands: 
      - npm
    
    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.300'
    
    steps:
    - task: UseDotNet@2
      displayName: 'Use DotnetCore SDK 3.1.300'
      inputs:
        packageType: sdk
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs: 
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'    
      displayName: 'Compile Sass assets'

    - task: NuGetToolInstaller@1

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt' # uses built in variables
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir) 

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Debug'

    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Release'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts - drop' # output is in drop!
      condition: succeeded()

- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev
    variables:
    - group: Mslearn
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: '$(serviceConnection)'
              appName: '$(WebAppName)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'